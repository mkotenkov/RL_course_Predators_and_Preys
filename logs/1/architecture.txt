InnerModel(
  (backbone): Sequential(
    (0): Conv2d(5, 4, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (1): LeakyReLU(negative_slope=0.01)
    (2): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): LeakyReLU(negative_slope=0.01)
    (5): Conv2d(4, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (7): LeakyReLU(negative_slope=0.01)
    (8): Conv2d(6, 6, kernel_size=(1, 1), stride=(1, 1))
    (9): LeakyReLU(negative_slope=0.01)
    (10): Conv2d(6, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): LeakyReLU(negative_slope=0.01)
    (12): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (13): Flatten(start_dim=1, end_dim=-1)
  )
  (backbone_3x3): Sequential(
    (0): Conv2d(5, 32, kernel_size=(3, 3), stride=(1, 1))
    (1): LeakyReLU(negative_slope=0.01)
    (2): Flatten(start_dim=1, end_dim=-1)
  )
  (backbone_5x5): Sequential(
    (0): Conv2d(5, 32, kernel_size=(5, 5), stride=(1, 1))
    (1): LeakyReLU(negative_slope=0.01)
    (2): Flatten(start_dim=1, end_dim=-1)
  )
  (backbone_9x9): Sequential(
    (0): Conv2d(5, 16, kernel_size=(5, 5), stride=(1, 1))
    (1): LeakyReLU(negative_slope=0.01)
    (2): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1))
    (3): LeakyReLU(negative_slope=0.01)
    (4): Flatten(start_dim=1, end_dim=-1)
  )
  (backbone_17x17): Sequential(
    (0): Conv2d(5, 4, kernel_size=(5, 5), stride=(1, 1))
    (1): LeakyReLU(negative_slope=0.01)
    (2): Conv2d(4, 8, kernel_size=(5, 5), stride=(1, 1))
    (3): LeakyReLU(negative_slope=0.01)
    (4): Conv2d(8, 16, kernel_size=(5, 5), stride=(1, 1))
    (5): LeakyReLU(negative_slope=0.01)
    (6): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1))
    (7): LeakyReLU(negative_slope=0.01)
    (8): Flatten(start_dim=1, end_dim=-1)
  )
  (bonus_count_processor): Sequential(
    (0): Linear(in_features=1, out_features=32, bias=True)
    (1): LeakyReLU(negative_slope=0.01)
  )
  (head): Sequential(
    (0): Linear(in_features=185, out_features=5, bias=True)
  )
)